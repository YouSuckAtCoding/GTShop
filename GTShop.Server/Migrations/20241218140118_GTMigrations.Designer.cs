// <auto-generated />
using System;
using GTShop.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GTShop.Server.Migrations
{
    [DbContext(typeof(GTContext))]
    [Migration("20241218140118_GTMigrations")]
    partial class GTMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GTShop.Server.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Cart_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Cart_Exp_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(19,2)");

                    b.Property<Guid>("User_IdId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("User_IdId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("GTShop.Server.Models.Cart_Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cart_IdId")
                        .HasColumnType("int");

                    b.Property<Guid>("Product_IdId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Cart_IdId");

                    b.HasIndex("Product_IdId");

                    b.ToTable("Cart_Items");
                });

            modelBuilder.Entity("GTShop.Server.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GTShop.Server.Models.Order_Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Order_IdId")
                        .HasColumnType("int");

                    b.Property<Guid>("Product_IdId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Order_IdId");

                    b.HasIndex("Product_IdId");

                    b.ToTable("Order_Items");
                });

            modelBuilder.Entity("GTShop.Server.Models.P_Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Hex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Product_IdId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Product_IdId");

                    b.ToTable("P_Color");
                });

            modelBuilder.Entity("GTShop.Server.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Installments")
                        .HasColumnType("int");

                    b.Property<decimal>("Installments_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Method")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Payment_Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Payment_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(19,2)");

                    b.HasKey("Id");

                    b.HasIndex("Order");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("GTShop.Server.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Msrp")
                        .HasColumnType("decimal(19,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Torque")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("GTShop.Server.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SSN")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("GTShop.Server.Models.Cart", b =>
                {
                    b.HasOne("GTShop.Server.Models.User", "User_Id")
                        .WithMany()
                        .HasForeignKey("User_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_Id");
                });

            modelBuilder.Entity("GTShop.Server.Models.Cart_Item", b =>
                {
                    b.HasOne("GTShop.Server.Models.Cart", "Cart_Id")
                        .WithMany("Cart_Items")
                        .HasForeignKey("Cart_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTShop.Server.Models.Product", "Product_Id")
                        .WithMany()
                        .HasForeignKey("Product_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart_Id");

                    b.Navigation("Product_Id");
                });

            modelBuilder.Entity("GTShop.Server.Models.Order_Item", b =>
                {
                    b.HasOne("GTShop.Server.Models.Order", "Order_Id")
                        .WithMany("Order_Items")
                        .HasForeignKey("Order_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTShop.Server.Models.Product", "Product_Id")
                        .WithMany()
                        .HasForeignKey("Product_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order_Id");

                    b.Navigation("Product_Id");
                });

            modelBuilder.Entity("GTShop.Server.Models.P_Color", b =>
                {
                    b.HasOne("GTShop.Server.Models.Product", "Product_Id")
                        .WithMany("Colors")
                        .HasForeignKey("Product_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_Id");
                });

            modelBuilder.Entity("GTShop.Server.Models.Payment", b =>
                {
                    b.HasOne("GTShop.Server.Models.Order", "Order_Id")
                        .WithMany()
                        .HasForeignKey("Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order_Id");
                });

            modelBuilder.Entity("GTShop.Server.Models.Product", b =>
                {
                    b.HasOne("GTShop.Server.Models.Payment", null)
                        .WithMany("Products")
                        .HasForeignKey("PaymentId");
                });

            modelBuilder.Entity("GTShop.Server.Models.Cart", b =>
                {
                    b.Navigation("Cart_Items");
                });

            modelBuilder.Entity("GTShop.Server.Models.Order", b =>
                {
                    b.Navigation("Order_Items");
                });

            modelBuilder.Entity("GTShop.Server.Models.Payment", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GTShop.Server.Models.Product", b =>
                {
                    b.Navigation("Colors");
                });
#pragma warning restore 612, 618
        }
    }
}
